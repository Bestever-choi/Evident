model = dict(
    type='MaskRCNN',
    data_preprocessor=dict(
        type='DetDataPreprocessor',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        bgr_to_rgb=True,
        pad_mask=True,
        pad_size_divisor=32),
    backbone=dict(
        type='SwinTransformer',
        embed_dims=96,
        depths=[
            2,
            2,
            6,
            2,
        ],
        num_heads=[
            3,
            6,
            12,
            24,
        ],
        window_size=7,
        mlp_ratio=4,
        qkv_bias=True,
        qk_scale=None,
        drop_rate=0.0,
        attn_drop_rate=0.0,
        drop_path_rate=0.2,
        patch_norm=True,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        with_cp=False,
        convert_weights=True,
        init_cfg=dict(
            type='Pretrained',
            checkpoint=
            'https://github.com/SwinTransformer/storage/releases/download/v1.0.0/swin_tiny_patch4_window7_224.pth'
        )),
    neck=dict(
        type='FPN',
        in_channels=[
            96,
            192,
            384,
            768,
        ],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[
                8,
            ],
            ratios=[
                0.5,
                1.0,
                2.0,
            ],
            strides=[
                4,
                8,
                16,
                32,
                64,
            ]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[
                0.0,
                0.0,
                0.0,
                0.0,
            ],
            target_stds=[
                1.0,
                1.0,
                1.0,
                1.0,
            ]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
    roi_head=dict(
        type='StandardRoIHead',
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[
                4,
                8,
                16,
                32,
            ]),
        bbox_head=dict(
            type='Shared2FCBBoxHead',
            in_channels=256,
            fc_out_channels=1024,
            roi_feat_size=7,
            num_classes=53,
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                ],
                target_stds=[
                    0.1,
                    0.1,
                    0.2,
                    0.2,
                ]),
            reg_class_agnostic=False,
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
        mask_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=14, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[
                4,
                8,
                16,
                32,
            ]),
        mask_head=dict(
            type='FCNMaskHead',
            num_convs=4,
            in_channels=256,
            conv_out_channels=256,
            num_classes=53,
            loss_mask=dict(
                type='CrossEntropyLoss', use_mask=True, loss_weight=1.0))),
    train_cfg=dict(
        rpn=dict(
            assigner=dict(
                type='MaxIoUAssigner',
                pos_iou_thr=0.7,
                neg_iou_thr=0.3,
                min_pos_iou=0.3,
                match_low_quality=True,
                ignore_iof_thr=-1),
            sampler=dict(
                type='RandomSampler',
                num=256,
                pos_fraction=0.5,
                neg_pos_ub=-1,
                add_gt_as_proposals=False),
            allowed_border=-1,
            pos_weight=-1,
            debug=False),
        rpn_proposal=dict(
            nms_pre=2000,
            max_per_img=1000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=dict(
            assigner=dict(
                type='MaxIoUAssigner',
                pos_iou_thr=0.5,
                neg_iou_thr=0.5,
                min_pos_iou=0.5,
                match_low_quality=True,
                ignore_iof_thr=-1),
            sampler=dict(
                type='RandomSampler',
                num=512,
                pos_fraction=0.25,
                neg_pos_ub=-1,
                add_gt_as_proposals=True),
            mask_size=28,
            pos_weight=-1,
            debug=False)),
    test_cfg=dict(
        rpn=dict(
            nms_pre=1000,
            max_per_img=1000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=dict(
            score_thr=0.05,
            nms=dict(type='nms', iou_threshold=0.5),
            max_per_img=100,
            mask_thr_binary=0.5)))
dataset_type = 'CocoDataset'
data_root = './Dentex2-2'
backend_args = None
train_pipeline = [
    dict(type='LoadImageFromFile', backend_args=None),
    dict(type='LoadAnnotations', with_bbox=True, with_mask=True),
    dict(type='RandomFlip', prob=0.0),
    dict(
        type='RandomChoice',
        transforms=[
            [
                dict(
                    type='RandomChoiceResize',
                    scales=[
                        (
                            480,
                            1333,
                        ),
                        (
                            512,
                            1333,
                        ),
                        (
                            544,
                            1333,
                        ),
                        (
                            576,
                            1333,
                        ),
                        (
                            608,
                            1333,
                        ),
                        (
                            640,
                            1333,
                        ),
                        (
                            672,
                            1333,
                        ),
                        (
                            704,
                            1333,
                        ),
                        (
                            736,
                            1333,
                        ),
                        (
                            768,
                            1333,
                        ),
                        (
                            800,
                            1333,
                        ),
                    ],
                    keep_ratio=True),
            ],
            [
                dict(
                    type='RandomChoiceResize',
                    scales=[
                        (
                            400,
                            1333,
                        ),
                        (
                            500,
                            1333,
                        ),
                        (
                            600,
                            1333,
                        ),
                    ],
                    keep_ratio=True),
                dict(
                    type='RandomCrop',
                    crop_type='absolute_range',
                    crop_size=(
                        384,
                        600,
                    ),
                    allow_negative_crop=True),
                dict(
                    type='RandomChoiceResize',
                    scales=[
                        (
                            480,
                            1333,
                        ),
                        (
                            512,
                            1333,
                        ),
                        (
                            544,
                            1333,
                        ),
                        (
                            576,
                            1333,
                        ),
                        (
                            608,
                            1333,
                        ),
                        (
                            640,
                            1333,
                        ),
                        (
                            672,
                            1333,
                        ),
                        (
                            704,
                            1333,
                        ),
                        (
                            736,
                            1333,
                        ),
                        (
                            768,
                            1333,
                        ),
                        (
                            800,
                            1333,
                        ),
                    ],
                    keep_ratio=True),
            ],
        ]),
    dict(type='PackDetInputs'),
]
test_pipeline = [
    dict(type='LoadImageFromFile', backend_args=None),
    dict(type='Resize', scale=(
        1333,
        800,
    ), keep_ratio=True),
    dict(type='LoadAnnotations', with_bbox=True, with_mask=True),
    dict(
        type='PackDetInputs',
        meta_keys=(
            'img_id',
            'img_path',
            'ori_shape',
            'img_shape',
            'scale_factor',
        )),
]
train_dataloader = dict(
    batch_size=4,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(type='DefaultSampler', shuffle=True),
    batch_sampler=dict(type='AspectRatioBatchSampler'),
    dataset=dict(
        type='CocoDataset',
        data_root='./Dentex2-2',
        ann_file='train/_annotations.coco.json',
        data_prefix=dict(img='train/'),
        filter_cfg=dict(filter_empty_gt=True, min_size=32),
        pipeline=[
            dict(type='LoadImageFromFile', backend_args=None),
            dict(type='LoadAnnotations', with_bbox=True, with_mask=True),
            dict(type='RandomFlip', prob=0.0),
            dict(
                type='RandomChoice',
                transforms=[
                    [
                        dict(
                            type='RandomChoiceResize',
                            scales=[
                                (
                                    480,
                                    1333,
                                ),
                                (
                                    512,
                                    1333,
                                ),
                                (
                                    544,
                                    1333,
                                ),
                                (
                                    576,
                                    1333,
                                ),
                                (
                                    608,
                                    1333,
                                ),
                                (
                                    640,
                                    1333,
                                ),
                                (
                                    672,
                                    1333,
                                ),
                                (
                                    704,
                                    1333,
                                ),
                                (
                                    736,
                                    1333,
                                ),
                                (
                                    768,
                                    1333,
                                ),
                                (
                                    800,
                                    1333,
                                ),
                            ],
                            keep_ratio=True),
                    ],
                    [
                        dict(
                            type='RandomChoiceResize',
                            scales=[
                                (
                                    400,
                                    1333,
                                ),
                                (
                                    500,
                                    1333,
                                ),
                                (
                                    600,
                                    1333,
                                ),
                            ],
                            keep_ratio=True),
                        dict(
                            type='RandomCrop',
                            crop_type='absolute_range',
                            crop_size=(
                                384,
                                600,
                            ),
                            allow_negative_crop=True),
                        dict(
                            type='RandomChoiceResize',
                            scales=[
                                (
                                    480,
                                    1333,
                                ),
                                (
                                    512,
                                    1333,
                                ),
                                (
                                    544,
                                    1333,
                                ),
                                (
                                    576,
                                    1333,
                                ),
                                (
                                    608,
                                    1333,
                                ),
                                (
                                    640,
                                    1333,
                                ),
                                (
                                    672,
                                    1333,
                                ),
                                (
                                    704,
                                    1333,
                                ),
                                (
                                    736,
                                    1333,
                                ),
                                (
                                    768,
                                    1333,
                                ),
                                (
                                    800,
                                    1333,
                                ),
                            ],
                            keep_ratio=True),
                    ],
                ]),
            dict(type='PackDetInputs'),
        ],
        backend_args=None,
        metainfo=dict(
            classes=(
                'Odontoai',
                'tooth-11',
                'tooth-12',
                'tooth-13',
                'tooth-14',
                'tooth-15',
                'tooth-16',
                'tooth-17',
                'tooth-18',
                'tooth-21',
                'tooth-22',
                'tooth-23',
                'tooth-24',
                'tooth-25',
                'tooth-26',
                'tooth-27',
                'tooth-28',
                'tooth-31',
                'tooth-32',
                'tooth-33',
                'tooth-34',
                'tooth-35',
                'tooth-36',
                'tooth-37',
                'tooth-38',
                'tooth-41',
                'tooth-42',
                'tooth-43',
                'tooth-44',
                'tooth-45',
                'tooth-46',
                'tooth-47',
                'tooth-48',
                'tooth-51',
                'tooth-52',
                'tooth-53',
                'tooth-54',
                'tooth-55',
                'tooth-61',
                'tooth-62',
                'tooth-63',
                'tooth-64',
                'tooth-65',
                'tooth-71',
                'tooth-72',
                'tooth-73',
                'tooth-74',
                'tooth-75',
                'tooth-81',
                'tooth-82',
                'tooth-83',
                'tooth-84',
                'tooth-85',
            ))))
val_dataloader = dict(
    batch_size=1,
    num_workers=2,
    persistent_workers=True,
    drop_last=False,
    sampler=dict(type='DefaultSampler', shuffle=False),
    dataset=dict(
        type='CocoDataset',
        data_root='./Dentex2-2',
        ann_file='test/_annotations.coco.json',
        data_prefix=dict(img='test/'),
        test_mode=True,
        pipeline=[
            dict(type='LoadImageFromFile', backend_args=None),
            dict(type='Resize', scale=(
                1333,
                800,
            ), keep_ratio=True),
            dict(type='LoadAnnotations', with_bbox=True, with_mask=True),
            dict(
                type='PackDetInputs',
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                )),
        ],
        backend_args=None,
        metainfo=dict(
            classes=(
                'Odontoai',
                'tooth-11',
                'tooth-12',
                'tooth-13',
                'tooth-14',
                'tooth-15',
                'tooth-16',
                'tooth-17',
                'tooth-18',
                'tooth-21',
                'tooth-22',
                'tooth-23',
                'tooth-24',
                'tooth-25',
                'tooth-26',
                'tooth-27',
                'tooth-28',
                'tooth-31',
                'tooth-32',
                'tooth-33',
                'tooth-34',
                'tooth-35',
                'tooth-36',
                'tooth-37',
                'tooth-38',
                'tooth-41',
                'tooth-42',
                'tooth-43',
                'tooth-44',
                'tooth-45',
                'tooth-46',
                'tooth-47',
                'tooth-48',
                'tooth-51',
                'tooth-52',
                'tooth-53',
                'tooth-54',
                'tooth-55',
                'tooth-61',
                'tooth-62',
                'tooth-63',
                'tooth-64',
                'tooth-65',
                'tooth-71',
                'tooth-72',
                'tooth-73',
                'tooth-74',
                'tooth-75',
                'tooth-81',
                'tooth-82',
                'tooth-83',
                'tooth-84',
                'tooth-85',
            ))))
test_dataloader = dict(
    batch_size=1,
    num_workers=2,
    persistent_workers=True,
    drop_last=False,
    sampler=dict(type='DefaultSampler', shuffle=False),
    dataset=dict(
        type='CocoDataset',
        data_root='./Dentex2-2',
        ann_file='test/_annotations.coco.json',
        data_prefix=dict(img='test/'),
        test_mode=True,
        pipeline=[
            dict(type='LoadImageFromFile', backend_args=None),
            dict(type='Resize', scale=(
                1333,
                800,
            ), keep_ratio=True),
            dict(type='LoadAnnotations', with_bbox=True, with_mask=True),
            dict(
                type='PackDetInputs',
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                )),
        ],
        backend_args=None,
        metainfo=dict(
            classes=(
                'Odontoai',
                'tooth-11',
                'tooth-12',
                'tooth-13',
                'tooth-14',
                'tooth-15',
                'tooth-16',
                'tooth-17',
                'tooth-18',
                'tooth-21',
                'tooth-22',
                'tooth-23',
                'tooth-24',
                'tooth-25',
                'tooth-26',
                'tooth-27',
                'tooth-28',
                'tooth-31',
                'tooth-32',
                'tooth-33',
                'tooth-34',
                'tooth-35',
                'tooth-36',
                'tooth-37',
                'tooth-38',
                'tooth-41',
                'tooth-42',
                'tooth-43',
                'tooth-44',
                'tooth-45',
                'tooth-46',
                'tooth-47',
                'tooth-48',
                'tooth-51',
                'tooth-52',
                'tooth-53',
                'tooth-54',
                'tooth-55',
                'tooth-61',
                'tooth-62',
                'tooth-63',
                'tooth-64',
                'tooth-65',
                'tooth-71',
                'tooth-72',
                'tooth-73',
                'tooth-74',
                'tooth-75',
                'tooth-81',
                'tooth-82',
                'tooth-83',
                'tooth-84',
                'tooth-85',
            ))))
val_evaluator = dict(
    type='CocoMetric',
    ann_file='./Dentex2-2/test/_annotations.coco.json',
    metric=[
        'bbox',
        'segm',
    ],
    format_only=False,
    backend_args=None)
test_evaluator = dict(
    type='CocoMetric',
    ann_file='./Dentex2-2/test/_annotations.coco.json',
    metric=[
        'bbox',
        'segm',
    ],
    format_only=False,
    backend_args=None)
train_cfg = dict(type='EpochBasedTrainLoop', max_epochs=200, val_interval=3)
val_cfg = dict(type='ValLoop')
test_cfg = dict(type='TestLoop')
param_scheduler = [
    dict(
        type='LinearLR', start_factor=0.001, by_epoch=False, begin=0,
        end=1000),
    dict(
        type='ReduceOnPlateauLR',
        begin=0,
        end=200,
        patience=6,
        monitor='coco/bbox_mAP'),
]
optim_wrapper = dict(
    type='AmpOptimWrapper',
    optimizer=dict(
        type='AdamW', lr=0.0001, betas=(
            0.9,
            0.999,
        ), weight_decay=0.05),
    paramwise_cfg=dict(
        custom_keys=dict(
            absolute_pos_embed=dict(decay_mult=0.0),
            relative_position_bias_table=dict(decay_mult=0.0),
            norm=dict(decay_mult=0.0))))
auto_scale_lr = dict(enable=False, base_batch_size=16)
default_scope = 'mmdet'
default_hooks = dict(
    timer=dict(type='IterTimerHook'),
    logger=dict(type='LoggerHook', interval=50),
    param_scheduler=dict(type='ParamSchedulerHook'),
    checkpoint=dict(type='CheckpointHook', interval=3),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    visualization=dict(type='DetVisualizationHook', draw=True))
env_cfg = dict(
    cudnn_benchmark=False,
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0),
    dist_cfg=dict(backend='nccl'))
vis_backends = [
    dict(type='LocalVisBackend'),
    dict(type='WandbVisBackend', init_kwargs=dict(project='mmdetection')),
]
visualizer = dict(
    type='DetLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
        dict(type='WandbVisBackend', init_kwargs=dict(project='mmdetection')),
    ],
    name='visualizer')
log_processor = dict(type='LogProcessor', window_size=50, by_epoch=True)
log_level = 'INFO'
load_from = None
resume = False
pretrained = 'https://github.com/SwinTransformer/storage/releases/download/v1.0.0/swin_tiny_patch4_window7_224.pth'
max_epochs = 36
metainfo = dict(
    classes=(
        'Odontoai',
        'tooth-11',
        'tooth-12',
        'tooth-13',
        'tooth-14',
        'tooth-15',
        'tooth-16',
        'tooth-17',
        'tooth-18',
        'tooth-21',
        'tooth-22',
        'tooth-23',
        'tooth-24',
        'tooth-25',
        'tooth-26',
        'tooth-27',
        'tooth-28',
        'tooth-31',
        'tooth-32',
        'tooth-33',
        'tooth-34',
        'tooth-35',
        'tooth-36',
        'tooth-37',
        'tooth-38',
        'tooth-41',
        'tooth-42',
        'tooth-43',
        'tooth-44',
        'tooth-45',
        'tooth-46',
        'tooth-47',
        'tooth-48',
        'tooth-51',
        'tooth-52',
        'tooth-53',
        'tooth-54',
        'tooth-55',
        'tooth-61',
        'tooth-62',
        'tooth-63',
        'tooth-64',
        'tooth-65',
        'tooth-71',
        'tooth-72',
        'tooth-73',
        'tooth-74',
        'tooth-75',
        'tooth-81',
        'tooth-82',
        'tooth-83',
        'tooth-84',
        'tooth-85',
    ))
work_dir = './tutorial_exps/dentex/swin'
